<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Csharp on i do web stuff</title>
    <link>https://nicklanng.github.io/categories/csharp/</link>
    <description>Recent content in Csharp on i do web stuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright (c) 2018, all rights reserved.</copyright>
    <lastBuildDate>Thu, 24 Sep 2015 16:01:36 +0000</lastBuildDate>
    
	<atom:link href="https://nicklanng.github.io/categories/csharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Data Access Patterns</title>
      <link>https://nicklanng.github.io/post/data-access-patterns/</link>
      <pubDate>Thu, 24 Sep 2015 16:01:36 +0000</pubDate>
      
      <guid>https://nicklanng.github.io/post/data-access-patterns/</guid>
      <description>I recently got into a conversation with a colleague about system design and testability. One of the fun asides we got into was about data storage and why we use repositories. Below is my best attempt at explaining what I consider to be the main three data access strategies used in modern times.
 Repositories Query Objects Active Records  This code is written using Dapper and AutoMapper. MySQL connections are created in the service layer, coupling the service with the persistence technology; you don&amp;rsquo;t have to do this but it keeps the examples concise.</description>
    </item>
    
  </channel>
</rss>